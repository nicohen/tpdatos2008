#labels consideraciones,equipo,buenaspracticas
*= INFORMACION PARA QUE TODOS TENGAMOS EN CUENTA =*

== SVN ==

  * Hacer svn update antes de hacer svn commit
  * Luego de hacer un update no olvidarse de hacer un refresh en el eclipse
  * Testear las cosas antes de commitear
  * No subir codigo que no compila
  * Mantener actualizado el repositorio con los cambios locales cuando cumplan con las consignas anteriores (no dejar codigo local sin commitear durante mucho tiempo)
  * Commitear SIEMPRE, a no ser que no compile
  * Nunca commitear con mensajes en blanco o que no expliquen en que consiste el cambio, salvo que sea obvio dado los archivos modificados (Ej: agregar un jar de la jre1.6)
  * Evitar en lo posible el intercambio de codigo del proyecto fuera del repositorio (usando el servidor de archivos, mails o cualquier otra cosa)

== WIKI ==

  * Aprovechar en lo posible la wiki para comunicar cosas al grupo (en lugar de mails, o chat por msn)
  * Tratar en lo posible de definir labels en las paginas que se van creando (o las que ya estan creadas y no tienen labels), asi cuando crezca la cantidad de paginas de la wiki sea mas sencilla de organizar/navegar
  * Antes de contestar a una pagina, razonar si el contenido de esa contestacion, en realidad podria formularse en otra paginas de la wiki
  * Usar cuando corresponda enlaces a otras paginas de la wiki, facilita la navegacion

== TICKETS ==

  * Usar la carga de tickets para informar cosas pendientes por hacer
  * Tratar de que todos los tickets sean asignados a alguien, y a quien corresponda
  * Visitar continuamente la seccion tickets para saber si se tienen tickets asignados

== PROGRAMACION ==

  * Tratar de programar en ingles
  * Los nombres de los metodos lo mas explicitos posibles (primer letra en minuscula y luego mayusculas)
  * Los nombres de las clases, primer letra de cada palabra en mayuscula, que los nombres traten de dar la mayor informacion de lo que hace esa clase (ej: una clase abstracta que brinda metodos para trabajar con codigo html: "AbstractHtmlUtils"
  * Las interfaces empiezan con I (a definir)
  * Explicar framework a utilizar que es un ...Dto...Bo...Dao...View...Model...
  * Escribir comentarios en el codigo, lo mas detallado posible
  * No escribir variables sin sentido (i,j,k salvo casos particulares como un for)


== EQUIPO ==

  * Es importantisimo que haya comunicacion en el equipo
  * Es fundamental que hagamos reuniones *semanales*
  * Es muy importante saber todo el tiempo que estan haciendo los demas integrantes asi comprenemos que cosas faltan por hacer y que cosas ya estan hechas
  * Presencia y compromiso con las tareas de cada uno